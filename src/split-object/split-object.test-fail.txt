Fri May 21 2021, 5:29:10 PM

Splits an object into multiple objects
  ✖ FAIL: expect an empty array if no arguments is passed
    expect(received).toEqual(expected) // deep equality
    - Expected  - 1
    + Received  + 7
    - Array []
    + Array [
    +   Object {
    +     "undefined": undefined,
    +   },
    +   Object {},
    +   Object {},
    + ]
  ✖ FAIL: expect empty array if type of argument is passed object
    expect(received).toEqual(expected) // deep equality
    - Expected  - 1
    + Received  + 7
    - Array []
    + Array [
    +   Object {
    +     "undefined": undefined,
    +   },
    +   Object {},
    +   Object {},
    + ]
  ✖ FAIL: expect empty array if argument is passed string
    expect(received).toEqual(expected) // deep equality
    - Expected  -  1
    + Received  + 11
    - Array []
    + Array [
    +   Object {
    +     "0": "m",
    +   },
    +   Object {
    +     "1": "a",
    +   },
    +   Object {
    +     "2": "y",
    +   },
    + ]
  ✖ FAIL: expect empty array if argument is passed boolean value
    expect(received).toEqual(expected) // deep equality
    - Expected  - 1
    + Received  + 7
    - Array []
    + Array [
    +   Object {
    +     "undefined": undefined,
    +   },
    +   Object {},
    +   Object {},
    + ]
  ✖ FAIL: expect empty array if argument is array
    expect(received).toEqual(expected) // deep equality
    - Expected  - 1
    + Received  + 7
    - Array []
    + Array [
    +   Object {
    +     "undefined": undefined,
    +   },
    +   Object {},
    +   Object {},
    + ]
  ✖ FAIL: expect empty array if argument length is more than or less than three
    expect(received).toEqual(expected) // deep equality
    - Expected  - 1
    + Received  + 9
    - Array []
    + Array [
    +   Object {
    +     "a": 1,
    +   },
    +   Object {
    +     "undefined": undefined,
    +   },
    +   Object {},
    + ]
  ✖ FAIL: function should return array
    expect(received).toEqual(expected) // deep equality
    - Expected  -  1
    + Received  + 11
    - Array []
    + Array [
    +   Object {
    +     "a": 1,
    +   },
    +   Object {
    +     "b": 2,
    +   },
    +   Object {
    +     "undefined": undefined,
    +   },
    + ]
  √ PASS: function should return with new array with one entry for each key/value pair.

